-- MySQL Script generated by MySQL Workbench
-- Sa 26 Apr 2014 21:53:49 CEST
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema usr_web288_1
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `usr_web288_1` ;
CREATE SCHEMA IF NOT EXISTS `usr_web288_1` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `usr_web288_1` ;

-- -----------------------------------------------------
-- Table `usr_web288_1`.`gaestebuch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`gaestebuch` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`gaestebuch` (
  `gaestebuch` TEXT NOT NULL,
  `benutzername` VARCHAR(45) NOT NULL,
  `autorisiert` INT UNSIGNED NULL,
  INDEX `aut` USING BTREE (`autorisiert` ASC)  COMMENT 'Zum schnellen Filtern von unautorisierten Nachrichten')
ENGINE = InnoDB
COMMENT = 'Enthält alle Autorisierten und Unautorisierten Gästebucheinträge';


-- -----------------------------------------------------
-- Table `usr_web288_1`.`mitglieder`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`mitglieder` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`mitglieder` (
  `benutzername` VARCHAR(20) NOT NULL,
  `geschlecht` INT NULL,
  `vorname` VARCHAR(45) NULL,
  `nachname` VARCHAR(45) NULL,
  `geburtsdatum` DATE NULL,
  `wohnort` VARCHAR(45) NULL,
  `strasse` VARCHAR(45) NULL,
  `hausnummer` INT UNSIGNED NULL,
  `hnrzusatz` VARCHAR(20) NULL,
  `email` VARCHAR(45) NULL,
  `telefon` VARCHAR(15) NULL,
  `handy` VARCHAR(15) NULL,
  `sprache` VARCHAR(20) NULL,
  `rolle` INT NULL,
  PRIMARY KEY (`benutzername`),
  INDEX `Wohnort` (`wohnort` ASC),
  INDEX `Rolle` (`rolle` ASC))
ENGINE = InnoDB
COMMENT = 'Enthält alle persönlichen Daten eines jeden Mitglieds';


-- -----------------------------------------------------
-- Table `usr_web288_1`.`login`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`login` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`login` (
  `benutzername` VARCHAR(20) NOT NULL,
  `passwort` VARCHAR(32) NULL,
  `rolle` INT NULL,
  PRIMARY KEY (`benutzername`),
  INDEX `Rolle` (`rolle` ASC),
  CONSTRAINT `fk_login_mitglieder1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `usr_web288_1`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Benutzernamen und Passwörter (in MD5)';


-- -----------------------------------------------------
-- Table `usr_web288_1`.`profilbild`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`profilbild` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`profilbild` (
  `benutzername` VARCHAR(20) NOT NULL,
  `bild` BLOB NULL,
  PRIMARY KEY (`benutzername`),
  CONSTRAINT `fk_profilbild_mitglieder1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `usr_web288_1`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Speichert die Profilbilder';


-- -----------------------------------------------------
-- Table `usr_web288_1`.`nachrichten`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`nachrichten` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`nachrichten` (
  `benutzername` VARCHAR(20) NOT NULL COMMENT '\"an\"',
  `von` VARCHAR(20) NOT NULL,
  `zeit` DATETIME NOT NULL,
  `nachricht` TEXT NULL,
  `status` INT NULL,
  PRIMARY KEY (`benutzername`, `von`, `zeit`),
  CONSTRAINT `fk_nachrichten_mitglieder`
    FOREIGN KEY (`benutzername`)
    REFERENCES `usr_web288_1`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält alle Nachrichten aller Nutzer.';


-- -----------------------------------------------------
-- Table `usr_web288_1`.`besucherzaehler`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`besucherzaehler` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`besucherzaehler` (
  `zaehler` INT UNSIGNED NOT NULL)
ENGINE = InnoDB
COMMENT = 'Besucherzähler';


-- -----------------------------------------------------
-- Table `usr_web288_1`.`tutoren`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`tutoren` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`tutoren` (
  `benutzername` VARCHAR(20) NOT NULL,
  `umkreis` INT UNSIGNED NULL,
  `stundenlohn` INT UNSIGNED NULL,
  `bewertung` FLOAT UNSIGNED NULL,
  `gewichtung` INT UNSIGNED NULL,
  PRIMARY KEY (`benutzername`),
  CONSTRAINT `fk_tutoren_mitglieder1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `usr_web288_1`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tutoren samt Informationen.';


-- -----------------------------------------------------
-- Table `usr_web288_1`.`verfuegbarkeit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`verfuegbarkeit` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`verfuegbarkeit` (
  `benutzername` VARCHAR(20) NOT NULL,
  `zeitraum` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`benutzername`, `zeitraum`),
  CONSTRAINT `fk_verfuegbarkeit_tutoren1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `usr_web288_1`.`tutoren` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Verfügbarkeiten der einzelnen Tutoren.';


-- -----------------------------------------------------
-- Table `usr_web288_1`.`leistung`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`leistung` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`leistung` (
  `benutzername` VARCHAR(20) NOT NULL,
  `fach` VARCHAR(30) NOT NULL,
  `stufen` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`benutzername`, `fach`, `stufen`),
  CONSTRAINT `fk_leistung_tutoren1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `usr_web288_1`.`tutoren` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Leistungen eines Tutors.';


-- -----------------------------------------------------
-- Table `usr_web288_1`.`schwarzesbrett`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`schwarzesbrett` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`schwarzesbrett` (
  `benutzername` VARCHAR(45) NOT NULL,
  `zeit` DATETIME NOT NULL,
  `nachricht` TEXT NULL,
  PRIMARY KEY (`benutzername`, `zeit`),
  CONSTRAINT `fk_schwarzesbrett_tutoren1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `usr_web288_1`.`tutoren` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Schwarzes Brett der Tutoren.';


-- -----------------------------------------------------
-- Table `usr_web288_1`.`news`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `usr_web288_1`.`news` ;

CREATE TABLE IF NOT EXISTS `usr_web288_1`.`news` (
  `benutzername` VARCHAR(20) NOT NULL,
  `zeit` DATETIME NOT NULL,
  `nachricht` TEXT NULL,
  PRIMARY KEY (`benutzername`, `zeit`))
ENGINE = InnoDB
COMMENT = 'Newsticker';

USE `usr_web288_1` ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `usr_web288_1`.`mitglieder`
-- -----------------------------------------------------
START TRANSACTION;
USE `usr_web288_1`;
INSERT INTO `usr_web288_1`.`mitglieder` (`benutzername`, `geschlecht`, `vorname`, `nachname`, `geburtsdatum`, `wohnort`, `strasse`, `hausnummer`, `hnrzusatz`, `email`, `telefon`, `handy`, `sprache`, `rolle`) VALUES ('admin', 1, 'Daniel', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'deutsch', 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `usr_web288_1`.`login`
-- -----------------------------------------------------
START TRANSACTION;
USE `usr_web288_1`;
INSERT INTO `usr_web288_1`.`login` (`benutzername`, `passwort`, `rolle`) VALUES ('admin', 'e8636ea013e682faf61f56ce1cb1ab5c', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `usr_web288_1`.`besucherzaehler`
-- -----------------------------------------------------
START TRANSACTION;
USE `usr_web288_1`;
INSERT INTO `usr_web288_1`.`besucherzaehler` (`zaehler`) VALUES (0);

COMMIT;

