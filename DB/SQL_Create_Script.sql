-- MySQL Script generated by MySQL Workbench
-- Sa 26 Apr 2014 14:19:58 CEST
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema pts
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `pts` ;
CREATE SCHEMA IF NOT EXISTS `pts` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `pts` ;

-- -----------------------------------------------------
-- Table `pts`.`gaestebuch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`gaestebuch` ;

CREATE TABLE IF NOT EXISTS `pts`.`gaestebuch` (
  `gaestebuch` TEXT NOT NULL,
  `benutzername` VARCHAR(45) NOT NULL,
  `autorisiert` INT UNSIGNED NULL,
  INDEX `aut` USING BTREE (`autorisiert` ASC)  COMMENT 'Zum schnellen Filtern von unautorisierten Nachrichten')
ENGINE = InnoDB
COMMENT = 'Enthält alle Autorisierten und Unautorisierten Gästebucheinträge';


-- -----------------------------------------------------
-- Table `pts`.`mitglieder`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`mitglieder` ;

CREATE TABLE IF NOT EXISTS `pts`.`mitglieder` (
  `benutzername` VARCHAR(20) NOT NULL,
  `geschlecht` INT NULL,
  `vorname` VARCHAR(45) NULL,
  `nachname` VARCHAR(45) NULL,
  `geburtsdatum` DATE NULL,
  `wohnort` VARCHAR(45) NULL,
  `strasse` VARCHAR(45) NULL,
  `hausnummer` INT UNSIGNED NULL,
  `hnrzusatz` VARCHAR(20) NULL,
  `email` VARCHAR(45) NULL,
  `telefon` VARCHAR(15) NULL,
  `handy` VARCHAR(15) NULL,
  `sprache` VARCHAR(20) NULL,
  `rolle` INT NULL,
  PRIMARY KEY (`benutzername`),
  INDEX `Wohnort` (`wohnort` ASC),
  INDEX `Rolle` (`rolle` ASC))
ENGINE = InnoDB
COMMENT = 'Enthält alle persönlichen Daten eines jeden Mitglieds';


-- -----------------------------------------------------
-- Table `pts`.`login`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`login` ;

CREATE TABLE IF NOT EXISTS `pts`.`login` (
  `benutzername` VARCHAR(20) NOT NULL,
  `passwort` VARCHAR(32) NULL,
  `rolle` INT NULL,
  PRIMARY KEY (`benutzername`),
  INDEX `Rolle` (`rolle` ASC),
  CONSTRAINT `fk_login_mitglieder1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `pts`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Benutzernamen und Passwörter (in MD5)';


-- -----------------------------------------------------
-- Table `pts`.`profilbild`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`profilbild` ;

CREATE TABLE IF NOT EXISTS `pts`.`profilbild` (
  `benutzername` VARCHAR(20) NOT NULL,
  `bild` BLOB NULL,
  PRIMARY KEY (`benutzername`),
  CONSTRAINT `fk_profilbild_mitglieder1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `pts`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Speichert die Profilbilder';


-- -----------------------------------------------------
-- Table `pts`.`nachrichten`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`nachrichten` ;

CREATE TABLE IF NOT EXISTS `pts`.`nachrichten` (
  `benutzername` VARCHAR(20) NOT NULL COMMENT '\"an\"',
  `von` VARCHAR(20) NOT NULL,
  `zeit` DATETIME NOT NULL,
  `nachricht` TEXT NULL,
  `status` INT NULL,
  PRIMARY KEY (`benutzername`, `von`, `zeit`),
  CONSTRAINT `fk_nachrichten_mitglieder`
    FOREIGN KEY (`benutzername`)
    REFERENCES `pts`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält alle Nachrichten aller Nutzer.';


-- -----------------------------------------------------
-- Table `pts`.`besucherzaehler`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`besucherzaehler` ;

CREATE TABLE IF NOT EXISTS `pts`.`besucherzaehler` (
  `zaehler` INT UNSIGNED NOT NULL)
ENGINE = InnoDB
COMMENT = 'Besucherzähler';


-- -----------------------------------------------------
-- Table `pts`.`tutoren`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`tutoren` ;

CREATE TABLE IF NOT EXISTS `pts`.`tutoren` (
  `benutzername` VARCHAR(20) NOT NULL,
  `umkreis` INT UNSIGNED NULL,
  `stundenlohn` INT UNSIGNED NULL,
  `bewertung` FLOAT UNSIGNED NULL,
  `gewichtung` INT UNSIGNED NULL,
  PRIMARY KEY (`benutzername`),
  CONSTRAINT `fk_tutoren_mitglieder1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `pts`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tutoren samt Informationen.';


-- -----------------------------------------------------
-- Table `pts`.`verfuegbarkeit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`verfuegbarkeit` ;

CREATE TABLE IF NOT EXISTS `pts`.`verfuegbarkeit` (
  `benutzername` VARCHAR(20) NOT NULL,
  `zeitraum` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`benutzername`, `zeitraum`),
  CONSTRAINT `fk_verfuegbarkeit_tutoren1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `pts`.`tutoren` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Verfügbarkeiten der einzelnen Tutoren.';


-- -----------------------------------------------------
-- Table `pts`.`leistung`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`leistung` ;

CREATE TABLE IF NOT EXISTS `pts`.`leistung` (
  `benutzername` VARCHAR(20) NOT NULL,
  `fach` VARCHAR(30) NOT NULL,
  `stufen` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`benutzername`, `fach`, `stufen`),
  CONSTRAINT `fk_leistung_tutoren1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `pts`.`tutoren` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Leistungen eines Tutors.';


-- -----------------------------------------------------
-- Table `pts`.`schwarzesbrett`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`schwarzesbrett` ;

CREATE TABLE IF NOT EXISTS `pts`.`schwarzesbrett` (
  `benutzername` VARCHAR(45) NOT NULL,
  `zeit` DATETIME NOT NULL,
  `nachricht` TEXT NULL,
  PRIMARY KEY (`benutzername`, `zeit`),
  CONSTRAINT `fk_schwarzesbrett_tutoren1`
    FOREIGN KEY (`benutzername`)
    REFERENCES `pts`.`tutoren` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Schwarzes Brett der Tutoren.';


-- -----------------------------------------------------
-- Table `pts`.`news`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pts`.`news` ;

CREATE TABLE IF NOT EXISTS `pts`.`news` (
  `benutzername` VARCHAR(20) NOT NULL,
  `zeit` DATETIME NOT NULL,
  `nachricht` TEXT NULL,
  PRIMARY KEY (`benutzername`, `zeit`))
ENGINE = InnoDB
COMMENT = 'Newsticker';

USE `pts` ;

-- -----------------------------------------------------
-- Placeholder table for view `pts`.`suche`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `pts`.`suche` (`id` INT);

-- -----------------------------------------------------
-- View `pts`.`suche`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `pts`.`suche` ;
DROP TABLE IF EXISTS `pts`.`suche`;
USE `pts`;
CREATE  OR REPLACE VIEW `suche` AS 
	(select m.benutzername, m.Wohnort, t.umkreis, t.stundenlohn, t.bewertung, l.fach, l.stufen  
		from tutoren t join leistung l join mitglieder m);

SET SQL_MODE = '';
GRANT USAGE ON *.* TO ptsadmin@localhost;
 DROP USER ptsadmin@localhost;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'ptsadmin'@'localhost' IDENTIFIED BY 'geheim';

GRANT ALL ON `pts`.* TO 'ptsadmin'@'localhost';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
