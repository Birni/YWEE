-- MySQL Script generated by MySQL Workbench
-- Fr 25 Apr 2014 18:46:08 CEST
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`gaestebuch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`gaestebuch` ;

CREATE TABLE IF NOT EXISTS `mydb`.`gaestebuch` (
  `gaestebuch` TEXT NOT NULL,
  `benutzername` VARCHAR(45) NOT NULL,
  `autorisiert` INT UNSIGNED NULL,
  INDEX `aut` USING BTREE (`autorisiert` ASC)  COMMENT 'Zum schnellen Filtern von unautorisierten Nachrichten')
ENGINE = InnoDB
COMMENT = 'Enthält alle Autorisierten und Unautorisierten Gästebucheinträge';


-- -----------------------------------------------------
-- Table `mydb`.`mitglieder`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`mitglieder` ;

CREATE TABLE IF NOT EXISTS `mydb`.`mitglieder` (
  `benutzername` VARCHAR(20) NOT NULL,
  `geschlecht` BIT NULL,
  `vorname` VARCHAR(45) NULL,
  `nachname` VARCHAR(45) NULL,
  `geburtsdatum` DATE NULL,
  `wohnort` VARCHAR(45) NULL,
  `strasse` VARCHAR(45) NULL,
  `hausnummer` INT UNSIGNED NULL,
  `hnrzusatz` VARCHAR(20) NULL,
  `email` VARCHAR(45) NULL,
  `telefon` VARCHAR(15) NULL,
  `handy` VARCHAR(15) NULL,
  `sprache` VARCHAR(20) NULL,
  `rolle` BIT NULL,
  PRIMARY KEY (`benutzername`),
  INDEX `Wohnort` (`wohnort` ASC),
  INDEX `Rolle` (`rolle` ASC))
ENGINE = InnoDB
COMMENT = 'Enthält alle persönlichen Daten eines jeden Mitglieds';


-- -----------------------------------------------------
-- Table `mydb`.`login`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`login` ;

CREATE TABLE IF NOT EXISTS `mydb`.`login` (
  `benutzername` VARCHAR(20) NOT NULL,
  `passwort` VARCHAR(32) NULL,
  `rolle` BIT NULL,
  `mitglieder_benutzername` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`benutzername`, `mitglieder_benutzername`),
  INDEX `Rolle` (`rolle` ASC),
  INDEX `fk_login_mitglieder1_idx` (`mitglieder_benutzername` ASC),
  CONSTRAINT `fk_login_mitglieder1`
    FOREIGN KEY (`mitglieder_benutzername`)
    REFERENCES `mydb`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Benutzernamen und Passwörter (in MD5)';


-- -----------------------------------------------------
-- Table `mydb`.`profilbild`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`profilbild` ;

CREATE TABLE IF NOT EXISTS `mydb`.`profilbild` (
  `benutzername` VARCHAR(20) NOT NULL,
  `bild` BLOB NULL,
  `mitglieder_benutzername` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`benutzername`),
  INDEX `fk_profilbild_mitglieder1_idx` (`mitglieder_benutzername` ASC),
  CONSTRAINT `fk_profilbild_mitglieder1`
    FOREIGN KEY (`mitglieder_benutzername`)
    REFERENCES `mydb`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Speichert die Profilbilder';


-- -----------------------------------------------------
-- Table `mydb`.`nachrichten`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`nachrichten` ;

CREATE TABLE IF NOT EXISTS `mydb`.`nachrichten` (
  `benutzername` VARCHAR(20) NOT NULL COMMENT '\"an\"',
  `von` VARCHAR(20) NOT NULL,
  `datum` DATE NOT NULL,
  `zeit` TIMESTAMP NOT NULL,
  `nachricht` TEXT NULL,
  `status` BIT NULL,
  `mitglieder_benutzername` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`benutzername`, `von`, `datum`, `zeit`),
  INDEX `fk_nachrichten_mitglieder_idx` (`mitglieder_benutzername` ASC),
  CONSTRAINT `fk_nachrichten_mitglieder`
    FOREIGN KEY (`mitglieder_benutzername`)
    REFERENCES `mydb`.`mitglieder` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält alle Nachrichten aller Nutzer.';


-- -----------------------------------------------------
-- Table `mydb`.`besucherzaehler`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`besucherzaehler` ;

CREATE TABLE IF NOT EXISTS `mydb`.`besucherzaehler` (
  `zaehler` INT UNSIGNED NOT NULL)
ENGINE = InnoDB
COMMENT = 'Besucherzähler';


-- -----------------------------------------------------
-- Table `mydb`.`tutoren`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`tutoren` ;

CREATE TABLE IF NOT EXISTS `mydb`.`tutoren` (
  `benutzername` VARCHAR(20) NOT NULL,
  `umkreis` INT UNSIGNED NULL,
  `stundenlohn` INT UNSIGNED NULL,
  `bewertung` FLOAT UNSIGNED NULL,
  `gewichtung` INT UNSIGNED NULL,
  `mitglieder_benutzername` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`benutzername`, `mitglieder_benutzername`),
  INDEX `fk_tutoren_mitglieder1_idx` (`mitglieder_benutzername` ASC),
  CONSTRAINT `fk_tutoren_mitglieder1`
    FOREIGN KEY (`mitglieder_benutzername`)
    REFERENCES `mydb`.`mitglieder` (`benutzername`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tutoren samt Informationen.';


-- -----------------------------------------------------
-- Table `mydb`.`verfuegbarkeit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`verfuegbarkeit` ;

CREATE TABLE IF NOT EXISTS `mydb`.`verfuegbarkeit` (
  `benutzername` VARCHAR(20) NOT NULL,
  `zeitraum` INT UNSIGNED NOT NULL,
  `tutoren_benutzername` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`benutzername`, `zeitraum`),
  INDEX `fk_verfuegbarkeit_tutoren1_idx` (`tutoren_benutzername` ASC),
  CONSTRAINT `fk_verfuegbarkeit_tutoren1`
    FOREIGN KEY (`tutoren_benutzername`)
    REFERENCES `mydb`.`tutoren` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Verfügbarkeiten der einzelnen Tutoren.';


-- -----------------------------------------------------
-- Table `mydb`.`leistung`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`leistung` ;

CREATE TABLE IF NOT EXISTS `mydb`.`leistung` (
  `benutzername` VARCHAR(20) NOT NULL,
  `fach` VARCHAR(30) NOT NULL,
  `stufen` INT UNSIGNED NOT NULL,
  `tutoren_benutzername` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`benutzername`, `fach`, `stufen`),
  INDEX `fk_leistung_tutoren1_idx` (`tutoren_benutzername` ASC),
  CONSTRAINT `fk_leistung_tutoren1`
    FOREIGN KEY (`tutoren_benutzername`)
    REFERENCES `mydb`.`tutoren` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Enthält die Leistungen eines Tutors.';


-- -----------------------------------------------------
-- Table `mydb`.`schwarzesbrett`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`schwarzesbrett` ;

CREATE TABLE IF NOT EXISTS `mydb`.`schwarzesbrett` (
  `benutzername` VARCHAR(45) NOT NULL,
  `datum` DATE NOT NULL,
  `zeit` TIMESTAMP NOT NULL,
  `nachricht` TEXT NULL,
  `tutoren_benutzername` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`benutzername`, `datum`, `zeit`),
  INDEX `fk_schwarzesbrett_tutoren1_idx` (`tutoren_benutzername` ASC),
  CONSTRAINT `fk_schwarzesbrett_tutoren1`
    FOREIGN KEY (`tutoren_benutzername`)
    REFERENCES `mydb`.`tutoren` (`benutzername`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Schwarzes Brett der Tutoren.';


-- -----------------------------------------------------
-- Table `mydb`.`news`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`news` ;

CREATE TABLE IF NOT EXISTS `mydb`.`news` (
  `benutzername` VARCHAR(20) NOT NULL,
  `datum` DATE NOT NULL,
  `zeit` TIMESTAMP NOT NULL,
  `nachricht` TEXT NULL,
  PRIMARY KEY (`benutzername`, `datum`, `zeit`))
ENGINE = InnoDB
COMMENT = 'Newsticker';

USE `mydb` ;

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`suche`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`suche` (`id` INT);

-- -----------------------------------------------------
-- View `mydb`.`suche`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`suche` ;
DROP TABLE IF EXISTS `mydb`.`suche`;
USE `mydb`;
CREATE  OR REPLACE VIEW `suche` AS 
	(select * from tutoren t, leistung l, mitglieder m 
		where t.benutzernname = l.benutzername and t.benutzername = m.benutzername);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
